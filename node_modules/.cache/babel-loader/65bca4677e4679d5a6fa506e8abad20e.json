{"remainingRequest":"/Users/sidmadala/Documents/Duke/School/2020-2021/Semester 1/CS 316/Project/vue-fireside-chat/node_modules/thread-loader/dist/cjs.js!/Users/sidmadala/Documents/Duke/School/2020-2021/Semester 1/CS 316/Project/vue-fireside-chat/node_modules/babel-loader/lib/index.js!/Users/sidmadala/Documents/Duke/School/2020-2021/Semester 1/CS 316/Project/vue-fireside-chat/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/sidmadala/Documents/Duke/School/2020-2021/Semester 1/CS 316/Project/vue-fireside-chat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sidmadala/Documents/Duke/School/2020-2021/Semester 1/CS 316/Project/vue-fireside-chat/src/components/ChatRoom.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sidmadala/Documents/Duke/School/2020-2021/Semester 1/CS 316/Project/vue-fireside-chat/src/components/ChatRoom.vue","mtime":1605461276005},{"path":"/Users/sidmadala/Documents/Duke/School/2020-2021/Semester 1/CS 316/Project/vue-fireside-chat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sidmadala/Documents/Duke/School/2020-2021/Semester 1/CS 316/Project/vue-fireside-chat/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sidmadala/Documents/Duke/School/2020-2021/Semester 1/CS 316/Project/vue-fireside-chat/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sidmadala/Documents/Duke/School/2020-2021/Semester 1/CS 316/Project/vue-fireside-chat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sidmadala/Documents/Duke/School/2020-2021/Semester 1/CS 316/Project/vue-fireside-chat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudXJsIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3NpZG1hZGFsYS9Eb2N1bWVudHMvRHVrZS9TY2hvb2wvMjAyMC0yMDIxL1NlbWVzdGVyIDEvQ1MgMzE2L1Byb2plY3QvdnVlLWZpcmVzaWRlLWNoYXQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgVXNlciBmcm9tICcuL1VzZXIudnVlJzsKaW1wb3J0IENoYXRNZXNzYWdlIGZyb20gJy4vQ2hhdE1lc3NhZ2UudnVlJzsKaW1wb3J0IExvZ2luIGZyb20gJy4vTG9naW4udnVlJzsKaW1wb3J0IHsgZGIsIHN0b3JhZ2UgfSBmcm9tICcuLi9maXJlYmFzZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBVc2VyOiBVc2VyLAogICAgTG9naW46IExvZ2luLAogICAgQ2hhdE1lc3NhZ2U6IENoYXRNZXNzYWdlCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbmV3TWVzc2FnZVRleHQ6ICcnLAogICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgbWVzc2FnZXM6IFtdLAogICAgICBuZXdBdWRpbzogbnVsbCwKICAgICAgcmVjb3JkZXI6IG51bGwKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgLy8gZ2V0dGluZyBjaGF0IGlkIHBhdGggZm9yIHJvdXRpbmcgd2l0aCBjb21wdXRlZCBwcm9wZXJ0eQogICAgY2hhdElkOiBmdW5jdGlvbiBjaGF0SWQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQ7CiAgICB9LAogICAgLy8gZ2V0dGluZyBtZXNzYWdlcyB3aXRoaW4gY2hhdCB1aWQgd2l0aCBjb21wdXRlZCBwcm9wZXJ0eQogICAgbWVzc2FnZXNDb2xsZWN0aW9uOiBmdW5jdGlvbiBtZXNzYWdlc0NvbGxlY3Rpb24oKSB7CiAgICAgIHJldHVybiBkYi5kb2MoImNoYXRzLyIuY29uY2F0KHRoaXMuY2hhdElkKSkuY29sbGVjdGlvbignbWVzc2FnZXMnKTsKICAgIH0sCiAgICAvLyBtYWtpbmcgbmV3IFVSTCB0byBzdG9yZSBhdWRpbwogICAgbmV3QXVkaW9VUkw6IGZ1bmN0aW9uIG5ld0F1ZGlvVVJMKCkgewogICAgICByZXR1cm4gVVJMLmNyZWF0ZU9iamVjdFVSTCh0aGlzLm5ld0F1ZGlvKTsKICAgIH0KICB9LAogIC8vZ2V0dGluZyBsYXN0IDI1IG1lc3NhZ2VzIGluIGNoYXQgdG8gZGlzcGxheQogIGZpcmVzdG9yZTogZnVuY3Rpb24gZmlyZXN0b3JlKCkgewogICAgcmV0dXJuIHsKICAgICAgbWVzc2FnZXM6IHRoaXMubWVzc2FnZXNDb2xsZWN0aW9uLm9yZGVyQnkoJ2NyZWF0ZWRBdCcpLmxpbWl0VG9MYXN0KDI1KQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIGFzeW5jaHJvbm91cyB3cml0ZSB0byBmaXJlYmFzZSB0byBhZGQgbWVzc2FnZSB3aXRoIHRleHQgYW5kIFVJRAogICAgYWRkTWVzc2FnZTogZnVuY3Rpb24gYWRkTWVzc2FnZSh1aWQsIGVtYWlsKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBhdWRpb1VSTCwgX3RoaXMkbWVzc2FnZXNDb2xsZWN0LCBtZXNzYWdlSWQsIHN0b3JhZ2VSZWY7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICAgICAgICAgICAgYXVkaW9VUkwgPSBudWxsOyAvLyBnZW5lcmF0ZSByYW5kb20gaWQgd2l0aG91dCBjcmVhdGluZyB0aGUgZG9jdW1lbnQgaXRzZWxmCgogICAgICAgICAgICAgICAgX3RoaXMkbWVzc2FnZXNDb2xsZWN0ID0gX3RoaXMubWVzc2FnZXNDb2xsZWN0aW9uLmRvYygpLCBtZXNzYWdlSWQgPSBfdGhpcyRtZXNzYWdlc0NvbGxlY3QuaWQ7IC8vIGNvbmRpdGlvbmFsIHRvIGFkZCBhdWRpbyBmaWxlIHRvIGZpcmVzdG9yZQoKICAgICAgICAgICAgICAgIGlmICghX3RoaXMubmV3QXVkaW8pIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBzdG9yYWdlUmVmID0gc3RvcmFnZS5yZWYoJ2NoYXRzJykuY2hpbGQoX3RoaXMuY2hhdElkKS5jaGlsZCgiIi5jb25jYXQobWVzc2FnZUlkLCAiLndhdiIpKTsgLy8gZm9ybWF0dGluZyBhdWRpbyBhcyB3YXYgaW4gY2hhdCBpZAoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgcmV0dXJuIHN0b3JhZ2VSZWYucHV0KF90aGlzLm5ld0F1ZGlvKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDk7CiAgICAgICAgICAgICAgICByZXR1cm4gc3RvcmFnZVJlZi5nZXREb3dubG9hZFVSTCgpOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBhdWRpb1VSTCA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMubWVzc2FnZXNDb2xsZWN0aW9uLmRvYyhtZXNzYWdlSWQpLnNldCh7CiAgICAgICAgICAgICAgICAgIHRleHQ6IF90aGlzLm5ld01lc3NhZ2VUZXh0LAogICAgICAgICAgICAgICAgICBzZW5kZXI6IHVpZCwKICAgICAgICAgICAgICAgICAgZW1haWw6IGVtYWlsLAogICAgICAgICAgICAgICAgICBjcmVhdGVkQXQ6IERhdGUubm93KCksCiAgICAgICAgICAgICAgICAgIGF1ZGlvVVJMOiBhdWRpb1VSTAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICBfdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgICAgICBfdGhpcy5uZXdNZXNzYWdlVGV4dCA9ICcnOwogICAgICAgICAgICAgICAgX3RoaXMubmV3QXVkaW8gPSBudWxsOwoKICAgICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vIHJlY29yZCBhdWRpbyBmcm9tIGJyb3dzZXIKICAgIHJlY29yZDogZnVuY3Rpb24gcmVjb3JkKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBzdHJlYW0sIG9wdGlvbnMsIHJlY29yZGVkQ2h1bmtzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfdGhpczIubmV3QXVkaW8gPSBudWxsOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKHsKICAgICAgICAgICAgICAgICAgYXVkaW86IHRydWUsCiAgICAgICAgICAgICAgICAgIHZpZGVvOiBmYWxzZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHN0cmVhbSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgb3B0aW9ucyA9IHsKICAgICAgICAgICAgICAgICAgbWltZVR5cGU6ICJhdWRpby93ZWJtIgogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIHJlY29yZGVkQ2h1bmtzID0gW107CiAgICAgICAgICAgICAgICBfdGhpczIucmVjb3JkZXIgPSBuZXcgTWVkaWFSZWNvcmRlcihzdHJlYW0sIG9wdGlvbnMpOwoKICAgICAgICAgICAgICAgIF90aGlzMi5yZWNvcmRlci5hZGRFdmVudExpc3RlbmVyKCJkYXRhYXZhaWxhYmxlIiwgZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICAgICAgaWYgKGUuZGF0YS5zaXplID4gMCkgewogICAgICAgICAgICAgICAgICAgIHJlY29yZGVkQ2h1bmtzLnB1c2goZS5kYXRhKTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgX3RoaXMyLnJlY29yZGVyLmFkZEV2ZW50TGlzdGVuZXIoInN0b3AiLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzMi5uZXdBdWRpbyA9IG5ldyBCbG9iKHJlY29yZGVkQ2h1bmtzKTsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coX3RoaXMyLm5ld0F1ZGlvKTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIF90aGlzMi5yZWNvcmRlci5zdGFydCgpOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8gYXN5bmNocm9ub3VzIGNhbGwgdG8gc3RvcCByZWNvcmRpbmcgYXVkaW8KICAgIHN0b3A6IGZ1bmN0aW9uIHN0b3AoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzMy5yZWNvcmRlci5zdG9wKCk7CgogICAgICAgICAgICAgICAgX3RoaXMzLnJlY29yZGVyID0gbnVsbDsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["ChatRoom.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <main class=\"section\">\n    <h3>Welcome to ChatRoom: {{ chatId }}</h3>\n\n    <router-link to=\"/\">Back</router-link>\n\n    <p>\n    Open this link in another browser window to chat \n      <code>https://fireside-b0dbe.web.app/#/chats/{{ chatId }}</code>\n    </p>\n\n    <User #user=\"{ user }\">\n      <div v-if=\"user\">\n        <ul>\n          <li v-for=\"message of messages\" :key=\"message.id\">\n            <ChatMessage :message=\"message\" :owner=\"user.uid === message.sender\" />\n          </li>\n        </ul>\n\n        <hr />\n        <h5>Record Audio</h5>\n\n        <button v-if=\"!recorder\" @click=\"record()\" class=\"button is-info\">Record Voice</button>\n        <button v-else @click=\"stop()\" class=\"button is-danger\">Stop</button>\n\n        <br />\n\n        <audio v-if=\"newAudio\" :src=\"newAudioURL\" controls></audio>\n\n        <hr />\n\n        <input v-model=\"newMessageText\" class=\"input\" />\n\n        <button\n          :disabled=\"(!newMessageText && !newAudio) || loading\"\n          class=\"button is-success\"\n          type=\"text\"\n          @click=\"addMessage(user.uid, user.email)\"\n        >Send</button>\n      </div>\n\n      <Login v-else />\n    </User>\n  </main>\n</template>\n\n<script>\n\nimport User from './User.vue';\nimport ChatMessage from './ChatMessage.vue';\nimport Login from './Login.vue';\nimport { db, storage } from '../firebase';\n\nexport default {\n  components: {\n    User,\n    Login,\n    ChatMessage,\n  },\n  data() {\n      return {\n          newMessageText: '',\n          loading: false,\n          messages: [],\n          newAudio: null,\n          recorder: null,\n      }\n  },\n  computed: {\n    // getting chat id path for routing with computed property\n    chatId() {\n      return this.$route.params.id;\n    },\n    // getting messages within chat uid with computed property\n    messagesCollection() {\n      return db.doc(`chats/${this.chatId}`).collection('messages');\n    },\n    // making new URL to store audio\n    newAudioURL() {\n      return URL.createObjectURL(this.newAudio);\n    }\n  },\n\t//getting last 25 messages in chat to display\n  firestore() {\n    return {\n      messages: this.messagesCollection.orderBy('createdAt').limitToLast(25)\n    };\n  },\n  methods: {\n\n    // asynchronous write to firebase to add message with text and UID\n    async addMessage(uid, email) {\n\n        this.loading = true;\n\n        let audioURL = null;\n\n        // generate random id without creating the document itself\n        const { id: messageId } = this.messagesCollection.doc();\n\t\t\n        // conditional to add audio file to firestore\n        if (this.newAudio) {\n          const storageRef = storage\n            .ref('chats')\n            .child(this.chatId)\n            .child(`${messageId}.wav`);  // formatting audio as wav in chat id\n\n            await storageRef.put(this.newAudio);\n          // wait to receive audio URL before continuing\n          audioURL = await storageRef.getDownloadURL();\n        }\n\n        // overwrite existing information at message id (create new doc)\t\n        await this.messagesCollection.doc(messageId).set({\n            text: this.newMessageText,\n            sender: uid,\n            email: email,\n            createdAt: Date.now(),\n            audioURL\n        });\n\n        this.loading = false;\n        this.newMessageText = '';\n        this.newAudio = null;\n    },\n\n    // record audio from browser\n    async record() {\n      this.newAudio = null;\n\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: false\n      });\n\n      const options = { mimeType: \"audio/webm\" };\n      const recordedChunks = [];\n      this.recorder = new MediaRecorder(stream, options);\n\n      this.recorder.addEventListener(\"dataavailable\", e => {\n        if (e.data.size > 0) {\n          recordedChunks.push(e.data);\n        }\n      });\n\n      this.recorder.addEventListener(\"stop\", () => {\n        this.newAudio = new Blob(recordedChunks);\n        console.log(this.newAudio);\n      });\n\n      this.recorder.start();\n    },\n\n    // asynchronous call to stop recording audio\n    async stop() {\n      this.recorder.stop();\n      this.recorder = null;\n    }\n  }\n};\n</script>\n\n\n<style scoped>\nul {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  min-width: 500px;\n  background: #efefef;\n  padding: 10px;\n  border-radius: 0;\n}\n\nli {\n  display: flex;\n}\n</style>\n"],"sourceRoot":"src/components"}]}